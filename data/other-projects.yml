# -----------
# Other Projects
# -----------

# if the current library is inside this definition it will be ignored automatically - so this can be reused in all projects!
# TODO: optional:
#   * provide a .kmp-template.yml in the root folder and then the plugin searches all repos automatically for this file???
# name: kmp-template
# link: auto detected?
# maven: io.github.mflisar.cachefileprovider/library
# description: This is a minimal library with a <b>few lines of code</b> and without dependencies that offers a simple file provider (simple read only access for sharing files with other apps).
# image: null or ...
# TODO: is it worth it?????

# each project has following properties:
# - name... the name of the project
# - link... the link to the project
# - maven... the maven artifact id of the project
# - image... the image to display in the docs [OPTIONAL]
# - description... a short description of the project
other-projects:
  - group: Utilities
    projects:
      - name: CacheFileProvider
        link: https://mflisar.github.io/CacheFileProvider
        maven: io.github.mflisar.cachefileprovider/library
        description: This is a minimal library with a <b>few lines of code</b> and without dependencies that offers a simple file provider (simple read only access for sharing files with other apps).
      - name: FeedbackManager
        link: https://mflisar.github.io/FeedbackManager
        maven: io.github.mflisar.feedbackmanager/library
        description: This is a very small library that allows you to <b>send feedback</b> from an app <b>without internet permission</b> via email, either directly or via an unintrusive notification.
  - group: Libraries
    projects:
    - name: KotBilling
      link: https://mflisar.github.io/KotBilling
      maven: io.github.mflisar.kotbilling/library
      description: A kotlin coroutine based solution for handling in app purchases for <b>billing library version 7</b>.
    - name: KotPreferences
      link: https://mflisar.github.io/KotPreferences
      maven: io.github.mflisar.kotpreferences/core
      description: With this library you can declare preferences via <b>kotlin delegates</b> and observe and update them via <b>kotlin flows</b>. This works with any storage implementation, an implementation for JetPack DataStore is provided already.
    - name: Lumberjack
      link: https://mflisar.github.io/Lumberjack
      #image: https://raw.githubusercontent.com/MFlisar/Lumberjack/master/screenshots/compose-viewer1.jpg
      maven: io.github.mflisar.lumberjack/core
      description: This is a <b>full logging library</b> with a build in way to log to <b>console</b>, <b>file</b> or any <b>custom</b> place as well as optional extensions to send a log file via mail or show it on the device.
  - group: Compose
    projects:
    - name: ComposeChangelog
      link: https://mflisar.github.io/ComposeChangelog
      image: https://raw.githubusercontent.com/MFlisar/ComposeChangelog/main/documentation/docs/screenshots/core/changelog1.png
      maven: io.github.mflisar.composechangelog/core
      description: This library offers you a a <b>changelog dialog</b> for compose including the ability to show new logs on app start only as well as filtering and customisation.
    - name: ComposeColors
      link: https://mflisar.github.io/ComposeColors
      image: https://raw.githubusercontent.com/MFlisar/ComposeColors/main/documentation/docs/screenshots/material/material.png
      maven: io.github.mflisar.composecolors/core
      description: A simple collection of colors that can be used inside any KMP compose project.
    - name: ComposeDebugDrawer
      link: https://mflisar.github.io/ComposeDebugDrawer
      image: https://raw.githubusercontent.com/MFlisar/ComposeDebugDrawer/main/documentation/custom/docs/screenshots/core/demo2.jpg
      maven: io.github.mflisar.composedebugdrawer/core
      description: This library offers you a <b>simple</b> and easily extendable <b>debug drawer</b>.
    - name: ComposeDialogs
      link: https://mflisar.github.io/ComposeDialogs
      image: https://raw.githubusercontent.com/MFlisar/ComposeDialogs/main/documentation/docs/screenshots/overview.jpg
      maven: io.github.mflisar.composedialogs/core
      description: A compose framework for <b>modal dialogs</b>.
    - name: ComposePreferences
      link: https://mflisar.github.io/ComposePreferences
      image: https://raw.githubusercontent.com/MFlisar/ComposePreferences/main/documentation/docs/screenshots/overview.jpg
      maven: io.github.mflisar.composepreferences/core
      description: This library offers you <b>preference screens</b> for compose including the ability of endless nesting subscreens as well as simple integration of custom preferences.
    - name: ComposeThemer
      link: https://mflisar.github.io/ComposeThemer
      image: https://mflisar.github.io/ComposeThemer/screenshots/defaultpicker/android1.png
      maven: io.github.mflisar.composethemer/core
      description: This is a <b>full compose theme engine</b> that handles applying a theme as well as updating the system ui elements. Extendible and allows to simply apply user selected themes inside your app.
  - group: Unofficial Projects
    projects:
     - name: kmp-parcelize
       link: https://github.com/MFlisar/kmp-parcelize
       maven: io.github.mflisar.parcelize/library
       description: a kmp parcelize library that allows you to use the @Parcelize annotation in your kmp projects
     - name: kmp-library
       link: https://github.com/MFlisar/kmp-library
       maven: io.github.mflisar.kmp-library/docs
       description: a collection of gradle plugins for my demo projects as well as for my own apps
     - name: kmp-democomposables
       link: https://github.com/MFlisar/kmp-demo-composables
       maven: io.github.mflisar.democomposables/library
       description: a collection of composables that I use for my demo projects
     - name: Toolbox
       link: https://github.com/MFlisar/Toolbox
       maven: io.github.mflisar.toolbox/core
       description: My personal toolbox library